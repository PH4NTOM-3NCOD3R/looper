name: Av1an NGShell

on:
  workflow_dispatch:
    inputs:
      FILEURL:
        description: FILEURL
        required: true
        type: string
      ChunkMethod:
        description: Chunk Method
        required: true
        default: lsmash
        type: choice
        options:
        - lsmash
        - ffms2
        - hybrid
        - select
        - segment
      ConcatMethod:
        description: Concat Method
        required: true
        default: ffmpeg
        type: choice
        options:
        - ffmpeg
        - mkvmerge
        - ivf

env:
  SOURCERY: ${{ secrets.SOURCERY }}
  FILEURL: ${{  github.event.inputs.FILEURL }}
  ChunkMethod: ${{ github.event.inputs.ChunkMethod }}
  ConcatMethod: ${{ github.event.inputs.ConcatMethod }}
  av1anTag: "master" # "sha-3e32699"

jobs:
  shell:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
        env:
          PAT: ${{ secrets.GH_TOKEN }}

      - name: SSH Keepalive
        uses: rokibhasansagar/custom_workflows/ssh_keepalive@main

      - name: Prepare Av1an Worker
        env:
          RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}
        run: |
          echo "::group:: Prepare"
          printf "\n[+] Cloning EncToolZ + rclone config for later use...\n"
          git clone -q --filter=blob:none --depth=1 https://github.com/ZeoRexDevs/EncToolZ ~/EncToolZ && rm -rf ~/EncToolZ/.git
          curl -fsSL "https://is.gd/rclonesetup4fr3aky" | bash
          printf "\n[i] Cleaning Up Unneeded Docker Images...\n"
          docker rmi -f $(docker images -q) &>/dev/null
          printf "\n[+] Dwnlaoding Av1an Docker Image...\n"
          # Pull tagged commit instead of master
          docker pull -q masterofzen/av1an:${av1anTag}
          printf "\n[i] Av1an Docker Image Download Complete.\n\n"
          echo "::endgroup::"
          echo "::group:: Documentation"
          shopt -s expand_aliases
          alias av1an="docker run --privileged -v "$(pwd):/videos" --user $(id -u):$(id -g) -i masterofzen/av1an:${av1anTag}"
          av1an --help 2>&1
          echo "::endgroup::"

      - name: Scene Detect Av1an Worker
        continue-on-error: true
        run: |
          shopt -s expand_aliases
          alias av1an="docker run --privileged -v "$(pwd):/videos" --user $(id -u):$(id -g) -i masterofzen/av1an:${av1anTag}"
          echo "::group:: Initial Worker"
          curl -fsSL --retry 5 --retry-connrefused --retry-delay 1 "${FILEURL}" -o inputfile.${FILEURL##*.}
          mediainfo "inputfile.${FILEURL##*.}"
          printf "\n[i] Starting Av1an Worker...\n\n"
          av1an --verbose --log-file sclog --log-level trace --keep -i "inputfile.${FILEURL##*.}" -o aom_encoded.mkv --pix-format yuv420p10le --split-method av-scenechange --sc-method standard --sc-downscale-height 720 --scenes scenes.${ChunkMethod}.json --extra-split 0 --min-scene-len 48 --chunk-method ${ChunkMethod} --sc-only
          # Upload the Scenes file
          echo -e "\n\n"
          jq .scenes[].end_frame scenes.${ChunkMethod}.json >/tmp/sc.xxxx.txt
          for i in $(<"/tmp/sc.xxxx.txt"); do
            echo $((i+1)) >>sceneIFrameBoundaries.txt
          done
          tar -I'zstd --ultra -22 -T2' -cf sclog_with_boundary.tzst sclog.log sceneIFrameBoundaries.txt scenes.${ChunkMethod}.json
          curl --upload-file sclog_with_boundary.tzst https://transfer.sh/ && echo
          echo "::endgroup::"
          echo "::group:: Tree Walk Directory"
          tree -a -h -I ".git*"
          echo "::endgroup::"

      - name: Main Av1an Worker
        continue-on-error: true
        run: |
          shopt -s expand_aliases
          alias av1an="docker run --privileged -v "$(pwd):/videos" --user $(id -u):$(id -g) -i masterofzen/av1an:${av1anTag}"
          echo "::group:: Main Worker"
          printf "\n[i] Starting Av1an Worker...\n\n"
          av1an --verbose --log-file enclog --log-level trace --keep -i "inputfile.${FILEURL##*.}" -o aom_encoded.mkv --encoder aom --video-params ' --usage=0 --cpu-used=4 --end-usage=q --cq-level=28 --lag-in-frames=48 --enable-fwd-kf=1 --auto-alt-ref=1 --enable-qm=1 --qm-min=2 --arnr-strength=2 --arnr-maxframes=4 --aq-mode=1 --threads=4 --tile-columns=1 --color-primaries=bt709 --transfer-characteristics=bt709 --matrix-coefficients=bt709 ' --workers 2 --passes 2 --ffmpeg ' -vf scale=-2:450 ' --max-tries 3 --pix-format yuv420p10le --split-method av-scenechange --sc-method standard --sc-downscale-height 720 --scenes scenes.${ChunkMethod}.json --extra-split 0 --min-scene-len 48 --chunk-method ${ChunkMethod} --concat ${ConcatMethod} --target-quality 85 --vmaf --probes 5 --probing-rate 2 --resume
          echo "::endgroup::"
          echo "::group:: Upload Result"
          mediainfo aom_encoded.mkv
          curl --upload-file aom_encoded.mkv https://transfer.sh/ && echo
          echo "::endgroup::"

      - name: Tree Walk
        continue-on-error: true
        run: |
          echo "::group:: Tree Walk Directory"
          tree -a -h -I ".git*"
          echo "::endgroup::"

      - name: NGROK Session
        continue-on-error: true
        run: curl -sL https://is.gd/ngrok3actions4fr3aky | bash
        env:
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
          NGROK_REGION: eu
          SSH_PASSWORD: SECRET
          TELEGRAM_BOT_TOKEN: ${{ secrets.NGBOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.NGBOT_CHAT }}
          REPO_PURPOSE: "Av1an NGShell"

      - name: Empty
        continue-on-error: true
        timeout-minutes: 45
        run: |
          until [[ "${TIME_LEFT:=40}" = 0 ]]; do
            printf "Please wait %s Minute(s) ...\n" "${TIME_LEFT}"
            sleep 1m
            TIME_LEFT=$((TIME_LEFT - 1))
          done
          printf "You have 3 minutes 59 seconds left.\n"
          sleep 4m
          exit
