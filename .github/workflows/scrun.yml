name: Script Runner CI

on:
  workflow_dispatch:
    inputs:
      ScriptURL:
        description: "Script URL (?param1=val1&param2=val2&... Supported)"
        required: true
        type: string
      RunnerMachine:
        description: "Runner Machine"
        required: false
        default: "ubuntu-24.04"
        type: choice
        options:
        - ubuntu-24.04
        - ubuntu-22.04
        - windows-2025
        - windows-2022
        - macos-15
        - macos-14
        - macos-13
      RunAsRoot:
        description: "Run As Root? (sudo $>command ...)"
        type: boolean
        default: false
        required: false
      CommonJobCustomVars:
        description: "Custom Vars (pipe-delimited, url-encoded)"
        type: string
        required: false
      CleanWS:
        description: "Clean Workspace with slimhub_actions"
        type: boolean
        default: false
        required: false
      SetupRclone:
        description: "Setup Rclone for Later Use"
        type: boolean
        default: false
        required: false

defaults:
  run:
    shell: bash

env:
  ScriptURL: ${{ github.event.inputs.ScriptURL }}
  CommonJobCustomVars: ${{ github.event.inputs.CommonJobCustomVars }}
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}
  GitToken: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    runs-on: ${{ github.event.inputs.RunnerMachine }}

    steps:
      - uses: actions/checkout@v4

      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}

      - name: Use slimhub_actions
        if: github.event.inputs.CleanWS == 'true'
        uses: rokibhasansagar/slimhub_actions@main

      - name: Setup Rclone for Later Use
        if: github.event.inputs.SetupRclone == 'true'
        uses: rokibhasansagar/custom_workflows/setup_rclone@main
        # env:
        #   RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}

      - name: Run Script
        run: |
          if [[ ${CommonJobCustomVars} != '' ]]; then
            echo -e "[i] Common Custom Vars:"
            for i in $(sed 's/|/\n/g' <<<"${CommonJobCustomVars}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "  $v=$w"; export $v="$w"
            done
          fi
          unset v w 2>/dev/null || true
          if grep -q "\?" <<<"${ScriptURL}"; then
            echo -e "[i] Positional Custom Vars:"
            export ParamEnvs="${ScriptURL##*\?}"
            export AddedEnvs=(env ${ParamEnvs//&/ })
            echo "  ${AddedEnvs[@]:-}"
          fi
          if [[ ${RunAsRoot} == true ]]; then
            export executorPrefix="sudo"
          fi
          (
            echo; set -x;
            curl -sL --retry 5 --retry-connrefused "${ScriptURL%\?*}" | ${executorPrefix:-} ${AddedEnvs[@]:-} bash
          )

