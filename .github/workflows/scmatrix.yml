name: Script Matrix CI
run-name: Script Matrix

on:
  workflow_dispatch:
    inputs:
      ScriptURL:
        description: "Script URL (?param1=val1&param2=val2&... Supported)"
        required: true
        type: string
      RunnerMachine:
        description: "Runner Machine"
        required: false
        default: "ubuntu-24.04"
        type: choice
        options:
        - ubuntu-24.04
        - ubuntu-22.04
        - windows-2025
        - windows-2022
        - macos-15
        - macos-14
        - macos-13
      TotalJobCount:
        description: "Number of Jobs to Run in Matrix"
        required: true
        default: "2"
        type: choice
        options:
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
      CommonJobCustomVars:
        description: "Common Custom Vars (pipe-delimited, url-encoded, root≈true‽)"
        required: false
        type: string
      Job1CustomVars:
        description: "Custom Vars for Job 1/A (space-delimited)"
        required: false
        default: "-"
        type: string
      Job2CustomVars:
        description: "Custom Vars for Job 2/B (space-delimited)"
        required: false
        default: "-"
        type: string
      Job3CustomVars:
        description: "Custom Vars for Job 3/C (space-delimited)"
        required: false
        default: "-"
        type: string
      Job4CustomVars:
        description: "Custom Vars for Job 4/D (space-delimited)"
        required: false
        default: "-"
        type: string
      Job5CustomVars:
        description: "Custom Vars for Job 5/E (space-delimited)"
        required: false
        default: "-"
        type: string
      Job6CustomVars:
        description: "Custom Vars for Job 6/F (space-delimited)"
        required: false
        default: "-"
        type: string

defaults:
  run:
    shell: bash

env:
  ScriptURL: ${{ github.event.inputs.ScriptURL }}
  CommonJobCustomVars: ${{ github.event.inputs.CommonJobCustomVars }}
  Job1CustomVars: ${{ github.event.inputs.Job1CustomVars }}
  Job2CustomVars: ${{ github.event.inputs.Job2CustomVars }}
  Job3CustomVars: ${{ github.event.inputs.Job3CustomVars }}
  Job4CustomVars: ${{ github.event.inputs.Job4CustomVars }}
  Job5CustomVars: ${{ github.event.inputs.Job5CustomVars }}
  Job6CustomVars: ${{ github.event.inputs.Job6CustomVars }}
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}
  GitToken: ${{ secrets.GH_TOKEN }}

jobs:

  matrix_builder:
    name: "Matrix Builder"
    runs-on: ubuntu-24.04

    env:
      TotalJobCount: ${{ github.event.inputs.TotalJobCount }}

    outputs:
      matrix: ${{ steps.set-params.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
          show-progress: false
      - name: "Generate Matrix JSON"
        id: set-params
        run: |
          case ${TotalJobCount} in
            2) export jobs=(A B) ;;
            3) export jobs=(A B C) ;;
            4) export jobs=(A B C D) ;;
            5) export jobs=(A B C D E) ;;
            6) export jobs=(A B C D E F) ;;
          esac
          export matrix=[$(for i in "${jobs[@]}"; do printf \""%s\"\n" "${i}"; done | paste -sd, -)]
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT
          echo -e "[i] Generated Matrix: ${matrix}"

  matrix_runner:
    name: "Job Runner"
    if: ( !cancelled() || success() )
    runs-on: ${{ github.event.inputs.RunnerMachine }}
    needs: matrix_builder

    strategy:
      fail-fast: false
      matrix:
        JobID: ${{fromJson(needs.matrix_builder.outputs.matrix)}}
    env:
      JobID: ${{ matrix.JobID }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          show-progress: false
      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Run Script [ ${{ env.CommonJobCustomVars }} ]
        run: |
          # First, export CommonJobCustomVars
          if [[ ${CommonJobCustomVars} != '' ]]; then
            echo -e "[i] Common Custom Vars:"
            for i in $(sed 's/|/\n/g' <<<"${CommonJobCustomVars}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "  $v=$w"; export $v="$w"
            done
          fi
          unset v w 2>/dev/null || true
          # Export JobXCustomVars
          case "${JobID}" in
            A) export JobCustomVars="${Job1CustomVars}" ;;
            B) export JobCustomVars="${Job2CustomVars}" ;;
            C) export JobCustomVars="${Job3CustomVars}" ;;
            D) export JobCustomVars="${Job4CustomVars}" ;;
            E) export JobCustomVars="${Job5CustomVars}" ;;
            F) export JobCustomVars="${Job6CustomVars}" ;;
          esac
          if [[ ${JobCustomVars} != '-' ]]; then
            echo -e "[i] Job Specific Custom Vars:"
            for i in $(sed 's/\s/\n/g' <<<"${JobCustomVars}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo "  $v=$w"; export $v="$w"
            done
          fi
          unset v w 2>/dev/null || true
          # If ScriptURL has ?param1=val1&param2=val2&... postfix
          if grep -q "\?" <<<"${ScriptURL}"; then
            echo -e "[i] Positional Custom Vars:"
            export ParamEnvs="${ScriptURL##*\?}"
            export AddedEnvs=(env ${ParamEnvs//&/ })
            echo "  ${AddedEnvs[@]:-}"
          fi
          if [[ ${root} == true ]]; then
            export executorPrefix="sudo"
          fi
          (
            echo; set -x;
            curl -sL --retry 5 --retry-connrefused "${ScriptURL%\?*}" | ${executorPrefix:-} ${AddedEnvs[@]:-} bash
          )

