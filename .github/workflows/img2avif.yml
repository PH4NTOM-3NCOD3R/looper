name: IMG2AVIF CI

on:
  workflow_dispatch:
    inputs:
      Input_Directory:
        description: "MDx Input Directory Name"
        required: true
        type: string
      Output_Directory:
        description: "MDx Output Directory Name"
        required: false
        type: string
      chWidth:
        description: "Chapter Per Job"
        required: true
        type: choice
        options:
        - "2"
        - "3"
        - "4"
        - "5"
        default: "3"
      ChapterRange:
        description: "RegEx Range of Chapters -OR- all"
        required: true
        type: string
      QScale:
        description: "AOMEnc QScale"
        required: true
        type: number
        default: 35
      Range:
        description: "YUV Color Range"
        required: true
        type: choice
        options:
        - f
        - l
        default: l
      DeltaQ:
        description: "DeltaQ Mode"
        required: true
        type: choice
        options:
        - "3"
        - "1"
        default: "3"
      Sharpness:
        description: "Sharpness Bias"
        required: true
        type: choice
        options:
        - "0"
        - "1"
        default: "0"
      DnlLvl:
        description: "Denoise Level"
        required: true
        type: choice
        options:
        - "0"
        - "1"
        default: "1"
      SkipSmallPics:
        description: "Skip Smaller Pics?"
        required: true
        type: boolean
        default: true

env:
  BaseScript_Hash: "33dccb6d2b4418a5062b894c0d1c67b4"
  RCLONE_CONFIG_URL: ${{ secrets.RCLONE_CONFIG_URL }}
  Input_Directory: ${{ github.event.inputs.Input_Directory }}

jobs:
  prepare:
    name: Prepare img2avif Matrix
    runs-on: ubuntu-22.04
    env:
      chWidth: ${{ github.event.inputs.chWidth }}
      ChapterRange: ${{ github.event.inputs.ChapterRange }}

    outputs:
      latestRevision: ${{ steps.set-params.outputs.latestRevision }}
      matrix: ${{ steps.set-params.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "main"
      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Create EncMatrix
        id: set-params
        run: |
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${BaseScript_Hash}/" | grep "/img2avif\.converter\.sh" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          echo "latestRevision=${latestRevision}" >> $GITHUB_OUTPUT
          echo -e "[i] Using ${latestRevision} as latestRevision"
          # Generate Workflow Matrix
          curl -sL "https://gist.github.com/rokibhasansagar/${BaseScript_Hash}/raw/${latestRevision}/xRangeExpander.sh" -O
          sed -i 's/__RANGE__/'"${ChapterRange,,}"'/g' ./xRangeExpander.sh
          source ./xRangeExpander.sh && rm ./xRangeExpander.sh
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT
          echo -e "[i] Generated Matrix: ${matrix}"

  img2avif:
    name: IMG2AVIF Converter
    runs-on: ubuntu-22.04
    needs: prepare

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    env:
      jobrange: ${{ matrix.jobrange }}
      latestRevision: ${{ needs.prepare.outputs.latestRevision }}
      QScale: ${{ github.event.inputs.QScale }}
      Range: ${{ github.event.inputs.Range }}
      DeltaQ: ${{ github.event.inputs.DeltaQ }}
      Sharpness: ${{ github.event.inputs.Sharpness }}
      DnlLvl: ${{ github.event.inputs.DnlLvl }}
      PixFormat: ${{ github.event.inputs.PixFormat }}
      SkipSmallPics: ${{ github.event.inputs.SkipSmallPics }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: "main"
      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Workstation
        env:
          Output_Directory: ${{ github.event.inputs.Output_Directory }}
        run: |
          echo "::group::[i] Setup tools"
          curl -sL "https://gist.github.com/rokibhasansagar/${BaseScript_Hash}/raw/${latestRevision}/xToolsetup.sh" -O
          source ./xToolsetup.sh && rm ./xToolsetup.sh
          echo "::endgroup::"
          mkdir -p ~/data && cd ~/data
          if [[ ${Output_Directory} == "" ]]; then
            export Output_Directory=$(sed 's/[!?.~]//g;s/'\''//g;s/!//g;s/\s/./g' <<<"${Input_Directory}")
          fi
          # Core libaom Converter Scriptlet
          curl -sL "https://gist.github.com/rokibhasansagar/${BaseScript_Hash}/raw/${latestRevision}/img2avif.core.v1.sh" -O
          # Main AIO Converter + Downloader/Uploader
          curl -sL "https://gist.github.com/rokibhasansagar/${BaseScript_Hash}/raw/${latestRevision}/img2avif.converter.sh" -O
          export xRange=$(sed 's/\+/ /g' <<<"${jobrange}")
          sed -i 's/__JOBRANGE__/'"${xRange}"'/g' ./img2avif.converter.sh
          source ./img2avif.converter.sh
          rm ./img2avif.*.sh
